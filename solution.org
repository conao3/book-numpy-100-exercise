#+title: Numpy 100
#+author: conao3
#+date: <2020-07-09 Thu>
#+options: ^:{}

* Config                                                           :noexport:
* Import the numpy package under the name np (★☆☆)
* Print the numpy version and the configuration (★☆☆)
* Create a null vector of size 10 (★☆☆)
* How to find the memory size of any array (★☆☆)
* How to get the documentation of the numpy add function from the command line? (★☆☆)
* Create a null vector of size 10 but the fifth value which is 1 (★☆☆)
* Create a vector with values ranging from 10 to 49 (★☆☆)
* Reverse a vector (first element becomes last) (★☆☆)
* Create a 3x3 matrix with values ranging from 0 to 8 (★☆☆)
* Find indices of non-zero elements from [1,2,0,0,4,0] (★☆☆)
* Create a 3x3 identity matrix (★☆☆)
* Create a 3x3x3 array with random values (★☆☆)
* Create a 10x10 array with random values and find the minimum and maximum values (★☆☆)
* Create a random vector of size 30 and find the mean value (★☆☆)
* Create a 2d array with 1 on the border and 0 inside (★☆☆)
* How to add a border (filled with 0's) around an existing array? (★☆☆)
* What is the result of the following expression? (★☆☆)
* Create a 5x5 matrix with values 1,2,3,4 just below the diagonal (★☆☆)
* Create a 8x8 matrix and fill it with a checkerboard pattern (★☆☆)
* Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element?
* Create a checkerboard 8x8 matrix using the tile function (★☆☆)
* Normalize a 5x5 random matrix (★☆☆)
* Create a custom dtype that describes a color as four unsigned bytes (RGBA) (★☆☆)
* Multiply a 5x3 matrix by a 3x2 matrix (real matrix product) (★☆☆)
* Given a 1D array, negate all elements which are between 3 and 8, in place. (★☆☆)
* What is the output of the following script? (★☆☆)
* Consider an integer vector Z, which of these expressions are legal? (★☆☆)
* What are the result of the following expressions?
* How to round away from zero a float array ? (★☆☆)
* How to find common values between two arrays? (★☆☆)
* How to ignore all numpy warnings (not recommended)? (★☆☆)
* Is the following expressions true? (★☆☆)
* How to get the dates of yesterday, today and tomorrow? (★☆☆)
* How to get all the dates corresponding to the month of July 2016? (★★☆)
* How to compute ((A+B)*(-A/2)) in place (without copy)? (★★☆)
* Extract the integer part of a random array of positive numbers using 4 different methods (★★☆)
* Create a 5x5 matrix with row values ranging from 0 to 4 (★★☆)
* Consider a generator function that generates 10 integers and use it to build an array (★☆☆)
* Create a vector of size 10 with values ranging from 0 to 1, both excluded (★★☆)
* Create a random vector of size 10 and sort it (★★☆)
* How to sum a small array faster than np.sum? (★★☆)
* Consider two random array A and B, check if they are equal (★★☆)
* Make an array immutable (read-only) (★★☆)
* Consider a random 10x2 matrix representing cartesian coordinates, convert them to polar coordinates (★★☆)
* Create random vector of size 10 and replace the maximum value by 0 (★★☆)
* Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (★★☆)
* Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj))
* Print the minimum and maximum representable value for each numpy scalar type (★★☆)
* How to print all the values of an array? (★★☆)
* How to find the closest value (to a given scalar) in a vector? (★★☆)
* Create a structured array representing a position (x,y) and a color (r,g,b) (★★☆)
* Consider a random vector with shape (100,2) representing coordinates, find point by point distances (★★☆)
* How to convert a float (32 bits) array into an integer (32 bits) in place?
* How to read the following file? (★★☆)
* What is the equivalent of enumerate for numpy arrays? (★★☆)
* Generate a generic 2D Gaussian-like array (★★☆)
* How to randomly place p elements in a 2D array? (★★☆)
* Subtract the mean of each row of a matrix (★★☆)
* How to sort an array by the nth column? (★★☆)
* How to tell if a given 2D array has null columns? (★★☆)
* Find the nearest value from a given value in an array (★★☆)
* Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (★★☆)
* Create an array class that has a name attribute (★★☆)
* Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (★★★)
* How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (★★★)
* Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (★★★)
* Considering a four dimensions array, how to get sum over the last two axis at once? (★★★)
* Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset indices? (★★★)
* How to get the diagonal of a dot product? (★★★)
* Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (★★★)
* Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (★★★)
* How to swap two rows of an array? (★★★)
* Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the triangles (★★★)
* Given an array C that is a bincount, how to produce an array A such that np.bincount(A) == C? (★★★)
* How to compute averages using a sliding window over an array? (★★★)
* Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (★★★)
* How to negate a boolean, or to change the sign of a float inplace? (★★★)
* Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (★★★)
* Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (★★★)
* Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (★★★)
* Consider an array Z = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array R = [[1,2,3,4], [2,3,4,5], [3,4,5,6], ..., [11,12,13,14]]? (★★★)
* Compute a matrix rank (★★★)
* How to find the most frequent value in an array?
* Extract all the contiguous 3x3 blocks from a random 10x10 matrix (★★★)
* Create a 2D array subclass such that Z[i,j] == Z[j,i] (★★★)
* Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (★★★)
* Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (★★★)
* How to implement the Game of Life using numpy arrays? (★★★)
* How to get the n largest values of an array (★★★)
* Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (★★★)
* How to create a record array from a regular array? (★★★)
* Consider a large vector Z, compute Z to the power of 3 using 3 different methods (★★★)
* Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (★★★)
* Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (★★★)
* Convert a vector of ints into a matrix binary representation (★★★)
* Given a two dimensional array, how to extract unique rows? (★★★)
* Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (★★★)
* Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (★★★)?
* Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (★★★)
* Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (★★★)
